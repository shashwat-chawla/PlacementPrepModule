class Solution {
public:
   
    double myPow(double x, int n) {
         double ans=0.0;
       // long long nn=n;
        if(n==0)
        {
            return 1;
        }
	if(n==INT_MIN){
	if(x==1||x==-1)
	return 1;
	return 0;
	}
        //long nn=n;
        	if(n<0){
		ans=1/myPow(x,-1*n);
		return ans;
	}
//         else
//         {
//             if(n%2==0)
//             {
//                 ans=((x*x)^(n/2);
//             }
//                      else
                     
//         }
        if(n%2==0)
        {
           ans= myPow(x*x,n/2);
        }
        else
        {
          ans=x*  myPow(x*x,(n-1)/2);
        }
        return ans;
    }
    
};
// //double myPow(double x, int n) {
// 	if(n==0)
// 		return 1;
// 	if(n==INT_MIN){
// 		if(x==1||x==-1)
// 			return 1;
// 		return 0;
// 	}

// 	 double ans;
// 	if(n<0){
// 		ans=1/myPow(x,-1*n);
// 		return ans;
// 	}
// 	if(n%2==0){
// 		ans = myPow(x*x,n/2);
// 	}
// 	else 
// 		ans = x*myPow(x*x,(n-1)/2);
// 	return ans;
// }
