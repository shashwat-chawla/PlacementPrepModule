class Solution {
public:
//     int l=0;
//     int len(ListNode* l1)
//     {
//         if(l==NULL)
//         {
//             return l;
//         }
//         l++;
//         l1=l1->next;
        
//     }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
//         lenl1=len(l1);
//         lenl2=len(l2);
//         int a1[lenl1];
//         int a2[lenl2];
//         int a=lenl1;
//         while(l1!=NULL)
//         {
//            a1[a--]=l1->val;
//             l1=l1->next;
//         }
//         a=lenl2;
//         while(l2!=NULL)
//         {
//            a2[a--]=l1->val;
//             l1=l1->next;
//         }
//        
//         int c=0;
//         for(int i=0;i<lenl1<lenl2?lenl1:lenl2;i++)
//         {
//             int s=a1[i]+a2[i];
//             int s1=s%10;
//             c=s/10;
//             int s3=s1+c;
//             ListNode* temp;
//             temp->next=NULL;
//             temp->val=s3;
//             sum->next=temp;
//             sum=temp;
            
//         }
        vector<int> a1;
        vector<int>  a2;
                
        while(l1!=NULL)
        {
            a1.push_back(l1->val);
            l1=l1->next;
        }
         while(l2!=NULL)
        {
            a2.push_back(l2->val);
            l2=l2->next;
        }
        int s1=0;
        int s2=0;
        int c=0;
         ListNode* sum;
        // for(int i=0;i<s1<s2?s1:s2;i++)
        // {
        //     int s=a1[i]+a2[i];
        //     int s1=s%10;
        //      c=s/10;
        //     int s3=s1+c;
        //      ListNode* temp;
        //    temp->next=NULL;
        //      temp->val=s3;
        //      sum->next=temp;
        //     sum=temp;
        // }
    ListNode*dummy = new ListNode(1);
     ListNode*dummy1 = dummy;
        int sumo;

        while(s1<a1.size()||s2<a2.size()||c!=0){
            sumo=0;
           if(s1<a1.size()){
               sumo+=a1[s1];
               s1++;
           }
            if(s2<a2.size()){
                sumo+=a2[s2];
                s2++;
            }
            sumo+=c;
            ListNode*a=new ListNode();
                a->val=sumo%10;
            dummy->next=a;
            dummy=a;
            c=sumo/10;
            
            
            
            
            
        }
        return dummy1->next;
        }
};
