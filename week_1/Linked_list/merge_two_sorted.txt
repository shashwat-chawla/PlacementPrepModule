class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1==NULL)
        {
            return list2;
        }
        if(list2==NULL)
        {
            return list1;
        }
        //two pointers
        ListNode* p1=list1;
        ListNode* p2=list2;
        ListNode* dummyNode=new ListNode(-1);//new dummy node with value -1
        ListNode* p3=dummyNode;//pointer which start from dummy node
        while(p1!=NULL && p2!=NULL)
        {
            if(p1->val<p2->val)
            {
                p3->next=p1;//add p1 in frint of p3
                p1=p1->next;
            }
            else
            {
                p3->next=p2;
                    p2=p2->next;
            }
            p3=p3->next;
        }
        while(p1!=NULL)
        {
            p3->next=p1;
            p1=p1->next;
             p3=p3->next;
        }
         while(p2!=NULL)
        {
            p3->next=p2;
             p2=p2->next;
             p3=p3->next;
        }
        return dummyNode->next;
        
    }
};
