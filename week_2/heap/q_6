class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> result;
        unordered_map<int, int> umap;
        for(int n: nums){
            umap[n]++;
        }
        priority_queue<pair<int, int>> pq;
        for(auto &it: umap){
            pq.push(make_pair(it.second, it.first));
        }
        while(k > 0){
            result.push_back(pq.top().second);
            pq.pop();
            k--;
        }
        return result;
    }
};
